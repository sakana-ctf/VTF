# 服务1的HTTPS配置（假设实际端口为8080）
server {
    listen 443 ssl;
    server_name service1.example.com;  # 替换为服务1的域名
 
    ssl_certificate /etc/nginx/ssl/service1.crt;  # 证书路径
    ssl_certificate_key /etc/nginx/ssl/service1.key;  # 私钥路径
 
    location / {
        proxy_pass http://localhost:8080;  # 转发到内部端口
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
}
 
# 服务2的HTTPS配置（假设实际端口为8443）
server {
    listen 443 ssl;
    server_name service2.example.com;  # 替换为服务2的域名
 
    ssl_certificate /etc/nginx/ssl/service2.crt;  # 证书路径
    ssl_certificate_key /etc/nginx/ssl/service2.key;  # 私钥路径
 
    location / {
        proxy_pass http://localhost:8443;  # 转发到内部端口
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
}
 
# HTTP强制跳转HTTPS（可选但推荐）
server {
    listen 80;
    server_name service1.example.com service2.example.com;
    return 301 https://$host$request_uri;
}
